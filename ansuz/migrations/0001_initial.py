# Generated by Django 4.1 on 2022-08-07 17:24

from django.db import migrations, models
import localflavor.br.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cpf', localflavor.br.models.BRCPFField(error_messages={'unique': 'Esse CPF já está cadastrado no sistema.'}, help_text='Esse campo é obrigatório. Máximo de 14 caracteres no formato ___.___.___-__', max_length=14, unique=True, verbose_name='CPF')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome completo')),
                ('data_de_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('titulacao', models.CharField(choices=[('1', 'Graduação'), ('2', 'Especialização'), ('3', 'Mestrado'), ('4', 'Doutorado')], max_length=1, verbose_name='Titulação')),
                ('termos_uso', models.CharField(choices=[('0', 'Não'), ('1', 'Sim')], max_length=1, verbose_name='Termos de Uso')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
